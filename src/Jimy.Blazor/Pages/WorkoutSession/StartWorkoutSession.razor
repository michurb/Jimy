@page "/start-workout/{WorkoutPlanId:guid}"
@using Jimy.Blazor.API.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Jimy.Blazor.Shared
@inject IWorkoutSessionService WorkoutSessionService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        <h3>Start Workout Session</h3>

        @if (isLoading)
        {
        <p>Starting workout session...</p>
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
        <div class="alert alert-danger">
            @errorMessage
        </div>
        }
        else
        {
        <button @onclick="StartWorkout" class="btn btn-primary">Start Workout</button>
        }
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public Guid WorkoutPlanId { get; set; }
    private bool isLoading;
    private string errorMessage;

    private async Task StartWorkout()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            var sessionId = await WorkoutSessionService.StartWorkoutSession(WorkoutPlanId);
            NavigationManager.NavigateTo($"/active-workout/{sessionId}");
        }
        catch (UnauthorizedAccessException)
        {
            errorMessage = "You are not authorized to start a workout session. Please sign in.";
            NavigationManager.NavigateTo("/signin");
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

}