@page "/workout-sessions/start"
@using System.ComponentModel.DataAnnotations
@using Jimy.Blazor.Services
@using Jimy.Business.DTOs
@inject ApiService ApiService
@inject NavigationManager NavigationManager

<h1 class="text-2xl font-bold mb-4">Start Workout Session</h1>

<EditForm Model="@_startSessionModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="mb-4">
        <label for="workoutPlan" class="block text-gray-700 text-sm font-bold mb-2">Select Workout Plan</label>
        <InputSelect id="workoutPlan" @bind-Value="_startSessionModel.WorkoutPlanId" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <option value="">Select a workout plan</option>
            @foreach (var plan in _workoutPlans)
            {
                <option value="@plan.Id">@plan.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => _startSessionModel.WorkoutPlanId)" />
    </div>

    <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
        Start Workout
    </button>
</EditForm>

@code {
    private StartSessionModel _startSessionModel = new();
    private IEnumerable<WorkoutPlanDto> _workoutPlans;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Replace with actual user ID
        Guid userId = new Guid("00000000-0000-0000-0000-000000000001");
        _workoutPlans = await ApiService.GetWorkoutPlansAsync(userId);
    }

    private async Task HandleValidSubmit()
    {
        // TODO: Replace with actual user ID
        Guid userId = new Guid("00000000-0000-0000-0000-000000000001");
        var createDto = new CreateWorkoutSessionDto
        {
            UserId = userId,
            WorkoutPlanId = _startSessionModel.WorkoutPlanId,
            Exercises = new List<CreateWorkoutSessionExerciseDto>()
        };

        // Fetch the workout plan to get its exercises
        var workoutPlan = await ApiService.GetWorkoutPlanAsync(_startSessionModel.WorkoutPlanId);
    
        // Add exercises from the workout plan to the createDto
        foreach (var exercise in workoutPlan.Exercises)
        {
            createDto.Exercises.Add(new CreateWorkoutSessionExerciseDto
            {
                ExerciseId = exercise.ExerciseId,
                Sets = exercise.Sets,
                Reps = exercise.Reps,
                Weight = 0 // Default weight, can be adjusted if needed
            });
        }

        await ApiService.StartWorkoutSessionAsync(createDto);
        NavigationManager.NavigateTo("/workout-sessions");
    }

    private class StartSessionModel
    {
        [Required(ErrorMessage = "Please select a workout plan")]
        public int WorkoutPlanId { get; set; }
    }
}