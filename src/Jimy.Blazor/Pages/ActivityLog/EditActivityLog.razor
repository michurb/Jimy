@using Jimy.Blazor.API.Interfaces
@using Jimy.Blazor.Services.Interfaces
@inject IActivityLogService ActivityLogService

<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full" id="edit-modal">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Edit Activity Log</h3>
        <EditForm Model="@activityLog" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator/>

            <div class="mb-4">
                <label for="date" class="block text-sm font-medium text-gray-700">Date</label>
                <InputDate id="date" @bind-Value="activityLog.Date" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm"/>
                <ValidationMessage For="@(() => activityLog.Date)"/>
            </div>

            <div class="mb-4">
                <label for="activityType" class="block text-sm font-medium text-gray-700">Activity Type</label>
                <InputText id="activityType" @bind-Value="activityLog.ActivityType" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm"/>
                <ValidationMessage For="@(() => activityLog.ActivityType)"/>
            </div>

            <div class="mb-4">
                <label for="duration" class="block text-sm font-medium text-gray-700">Duration (minutes)</label>
                <InputNumber id="duration" @bind-Value="activityLog.Duration" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm"/>
                <ValidationMessage For="@(() => activityLog.Duration)"/>
            </div>

            <div class="flex justify-end">
                <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2">
                    Save
                </button>
                <button @onclick="OnClose" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                    Cancel
                </button>
            </div>
        </EditForm>
    </div>
</div>


@code {
    [Parameter] public ActivityLogDto ActivityLog { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }

    private ActivityLogDto activityLog;

    protected override void OnInitialized()
    {
        activityLog = new ActivityLogDto
        {
            Id = ActivityLog.Id,
            UserId = ActivityLog.UserId,
            Date = ActivityLog.Date,
            ActivityType = ActivityLog.ActivityType,
            Duration = ActivityLog.Duration,
            WorkoutPlanId = ActivityLog.WorkoutPlanId
        };
    }

    private async Task HandleSubmit()
    {
        await ActivityLogService.UpdateActivityLogAsync(activityLog);
        await OnSave.InvokeAsync();
    }

}