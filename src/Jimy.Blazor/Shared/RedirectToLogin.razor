@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/unauthorized");
        }
        else
        {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (!string.IsNullOrEmpty(returnUrl) && !returnUrl.StartsWith("signin"))
            {
                NavigationManager.NavigateTo($"/signin?returnUrl={Uri.EscapeDataString(returnUrl)}", true);
            }
            else
            {
                NavigationManager.NavigateTo("/signin", true);
            }
        }
    }
}